import logging
from datetime import datetime, timezone

import discord
from discord import app_commands
from discord.ext import commands

from utils.embed_utils import create_embed, create_error_embed, format_currency

logger = logging.getLogger(__name__)

class Admin(commands.Cog):
    """A cog for bot owner and admin commands."""

    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.db = bot.db

    # Group for economy administration commands
    eco_admin_group = app_commands.Group(
        name="eco_admin",
        description="[Admin] C√°c l·ªánh qu·∫£n l√Ω kinh t·∫ø.",
        default_permissions=discord.Permissions(administrator=True)
    )

    @eco_admin_group.command(name="add", description="[Admin] C·ªông ti·ªÅn cho m·ªôt ng∆∞·ªùi d√πng.")
    @app_commands.describe(user="Ng∆∞·ªùi d√πng b·∫°n mu·ªën c·ªông ti·ªÅn.", amount="S·ªë ti·ªÅn mu·ªën c·ªông.")
    @app_commands.checks.has_permissions(administrator=True)
    async def eco_add(
        self, interaction: discord.Interaction, user: discord.Member, amount: app_commands.Range[int, 1]
    ):
        """C·ªông ti·ªÅn v√†o s·ªë d∆∞ c·ªßa ng∆∞·ªùi d√πng."""
        await self.db.add_or_update_user(user)
        success = await self.db.update_balance(user.id, amount)

        if success:
            new_balance = await self.db.get_user_balance(user.id)
            await interaction.response.send_message(
                embed=create_embed(
                    "Th√†nh c√¥ng",
                    f"ƒê√£ c·ªông **{format_currency(amount)}** cho {user.mention}.\n"
                    f"S·ªë d∆∞ m·ªõi: **{format_currency(new_balance)}**."
                ), ephemeral=True
            )
        else:
            await interaction.response.send_message(
                embed=create_error_embed("C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·ªë d∆∞."), ephemeral=True
            )

    @eco_admin_group.command(name="remove", description="[Admin] Tr·ª´ ti·ªÅn c·ªßa m·ªôt ng∆∞·ªùi d√πng.")
    @app_commands.describe(user="Ng∆∞·ªùi d√πng b·∫°n mu·ªën tr·ª´ ti·ªÅn.", amount="S·ªë ti·ªÅn mu·ªën tr·ª´.")
    @app_commands.checks.has_permissions(administrator=True)
    async def eco_remove(
        self, interaction: discord.Interaction, user: discord.Member, amount: app_commands.Range[int, 1]
    ):
        """Tr·ª´ ti·ªÅn t·ª´ s·ªë d∆∞ c·ªßa ng∆∞·ªùi d√πng."""
        await self.db.add_or_update_user(user)
        
        current_balance = await self.db.get_user_balance(user.id)
        if current_balance < amount:
            await interaction.response.send_message(
                embed=create_error_embed(f"Ng∆∞·ªùi d√πng ch·ªâ c√≥ {format_currency(current_balance)}, kh√¥ng th·ªÉ tr·ª´ {format_currency(amount)}."),
                ephemeral=True
            )
            return
            
        success = await self.db.update_balance(user.id, -amount)

        if success:
            new_balance = await self.db.get_user_balance(user.id)
            await interaction.response.send_message(
                embed=create_embed(
                    "Th√†nh c√¥ng",
                    f"ƒê√£ tr·ª´ **{format_currency(amount)}** c·ªßa {user.mention}.\n"
                    f"S·ªë d∆∞ m·ªõi: **{format_currency(new_balance)}**."
                ), ephemeral=True
            )
        else:
            await interaction.response.send_message(
                embed=create_error_embed("C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·ªë d∆∞."),
                ephemeral=True
            )

    @eco_admin_group.command(name="set", description="[Admin] Thi·∫øt l·∫≠p s·ªë d∆∞ ch√≠nh x√°c cho m·ªôt ng∆∞·ªùi d√πng.")
    @app_commands.describe(user="Ng∆∞·ªùi d√πng b·∫°n mu·ªën ƒë·∫∑t s·ªë d∆∞.", amount="S·ªë d∆∞ ch√≠nh x√°c mu·ªën ƒë·∫∑t.")
    @app_commands.checks.has_permissions(administrator=True)
    async def eco_set(
        self, interaction: discord.Interaction, user: discord.Member, amount: app_commands.Range[int, 0]
    ):
        """Thi·∫øt l·∫≠p m·ªôt s·ªë d∆∞ ch√≠nh x√°c cho ng∆∞·ªùi d√πng."""
        await self.db.add_or_update_user(user)
        success = await self.db.force_set_balance(user.id, amount)

        if success:
            await interaction.response.send_message(
                embed=create_embed(
                    "Th√†nh c√¥ng",
                    f"ƒê√£ ƒë·∫∑t s·ªë d∆∞ c·ªßa {user.mention} th√†nh **{format_currency(amount)}**."
                ), ephemeral=True
            )
        else:
            await interaction.response.send_message(
                embed=create_error_embed("C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·ªë d∆∞."), ephemeral=True
            )

    @app_commands.command(name="broadcast", description="[Admin] G·ª≠i m·ªôt th√¥ng b√°o t·ªõi t·∫•t c·∫£ c√°c k√™nh theo d√µi stock.")
    @app_commands.describe(message="N·ªôi dung th√¥ng b√°o b·∫°n mu·ªën g·ª≠i.")
    @app_commands.checks.has_permissions(administrator=True)
    async def broadcast(self, interaction: discord.Interaction, message: str):
        """G·ª≠i m·ªôt th√¥ng b√°o broadcast t·ª´ ch·ªß s·ªü h·ªØu bot ƒë·∫øn t·∫•t c·∫£ c√°c k√™nh stock."""
        await interaction.response.defer(ephemeral=True)

        all_channel_ids = await self.db.get_all_stock_channels()
        if not all_channel_ids:
            await interaction.followup.send(
                embed=create_error_embed("Kh√¥ng c√≥ k√™nh n√†o ƒë∆∞·ª£c c·∫•u h√¨nh ƒë·ªÉ nh·∫≠n th√¥ng b√°o."),
                ephemeral=True
            )
            return

        embed = create_embed(
            title="üì¢ Th√¥ng b√°o t·ª´ Developer üì¢",
            description=message,
            color=discord.Color.orange()
        )
        embed.set_footer(
            text=f"G·ª≠i b·ªüi {interaction.user.display_name}",
            icon_url=interaction.user.display_avatar.url
        )
        embed.timestamp = datetime.now(timezone.utc)

        successful_sends = 0
        failed_sends = 0
        for channel_id in all_channel_ids:
            channel = self.bot.get_channel(channel_id)
            if channel:
                try:
                    await channel.send(embed=embed)
                    successful_sends += 1
                except discord.Forbidden:
                    logger.warning("Kh√¥ng th·ªÉ g·ª≠i broadcast t·ªõi k√™nh %s (Forbidden).", channel_id)
                    failed_sends += 1
                except discord.HTTPException as e:
                    logger.error("L·ªói khi g·ª≠i broadcast t·ªõi k√™nh %s: %s", channel_id, e)
                    failed_sends += 1
            else:
                logger.warning("Kh√¥ng t√¨m th·∫•y k√™nh %s ƒë·ªÉ g·ª≠i broadcast.", channel_id)
                failed_sends += 1

        await interaction.followup.send(
            embed=create_embed(
                "Ho√†n t·∫•t Broadcast",
                f"‚úÖ ƒê√£ g·ª≠i t·ªõi: {successful_sends} k√™nh.\n‚ùå Th·∫•t b·∫°i: {failed_sends} k√™nh."
            ),
            ephemeral=True
        )

async def setup(bot: commands.Bot):
    """T·∫£i cog Admin v√†o bot."""
    await bot.add_cog(Admin(bot))